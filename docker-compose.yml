# # Verion of docker-compose to use 
# version: "3"

# services:
#   django_challenge_api:
#     build:
#       context: . #Sets the directory for docker-compose to build.
#       dockerfile: Dockerfile
#     # Maps port on the local machine to port on Docker image
#     ports:
#       - "8000:8000"
      
#     volumes: 
#     # Copy changes made to the project to your image in real-time.
#       - .:/django_challenge_api
#     # Handles the command used to run the project in the Docker container.
#     command: sh -c "cd django_challenge_api && python manage.py runserver 0.0.0.0:8000" 



# Verion of docker-compose to use 
version: "3"

services:
  django_challenge_api:
    build:
      context: . # Sets the directory for docker-compose to build.
    image: julianmesa/ieb_challenge_img:tagname
    container_name: challenge_api
    # Maps port on the local machine to port on Docker image
    ports:
      - "8000:8000"
      
    volumes: 
    # Copy changes made to the project to your image in real-time.
      - .:/django_challenge_api
    # Handles the command used to run the project in the Docker container.  
    command: sh -c "cd django_challenge_api && python manage.py runserver 0.0.0.0:8000" 
    
    environment:
      # The environment variable credetials that is needed 
      # in the settings for Postgres.
      - DB_HOST=db
      - DB_NAME=challenge
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
    depends_on:
      - db

  db:
    image: postgres:10-alpine
    environment:
      # credentials required by postgres:10-alpine
      - POSTGRES_DB=challenge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword